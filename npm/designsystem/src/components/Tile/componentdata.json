{
  "props": {
    "className": {
      "defaultValue": null,
      "description": "Adds custom classes to the element.",
      "name": "className",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "icon": {
      "defaultValue": null,
      "description": "Sets the icon to be displayed inside the tile.",
      "name": "icon",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": true,
      "type": {
        "name": "ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>"
      }
    },
    "title": {
      "defaultValue": null,
      "description": "Sets the title to be displayed inside the tile.",
      "name": "title",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": true,
      "type": {
        "name": "ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>"
      }
    },
    "highlighted": {
      "defaultValue": null,
      "description": "Toggles the highlighted style of the tile.",
      "name": "highlighted",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "description": {
      "defaultValue": null,
      "description": "Sets the description to be displayed inside the tile.",
      "name": "description",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "fixed": {
      "defaultValue": null,
      "description": "Sets a fixed max and min width for the tile.",
      "name": "fixed",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onClick": {
      "defaultValue": null,
      "description": "Called when the tile is clicked on.",
      "name": "onClick",
      "parent": {
        "fileName": "src/components/Tile/Tile.tsx",
        "name": "TileProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Tile/Tile.tsx",
          "name": "TileProps"
        }
      ],
      "required": false,
      "type": {
        "name": "((e?: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined"
      }
    },
    "download": {
      "defaultValue": null,
      "description": "",
      "name": "download",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "href": {
      "defaultValue": null,
      "description": "",
      "name": "href",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "hrefLang": {
      "defaultValue": null,
      "description": "",
      "name": "hrefLang",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "media": {
      "defaultValue": null,
      "description": "",
      "name": "media",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "ping": {
      "defaultValue": null,
      "description": "",
      "name": "ping",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "rel": {
      "defaultValue": null,
      "description": "",
      "name": "rel",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "target": {
      "defaultValue": null,
      "description": "",
      "name": "target",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "referrerPolicy": {
      "defaultValue": null,
      "description": "",
      "name": "referrerPolicy",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"\" | \"same-origin\" | \"no-referrer\" | \"no-referrer-when-downgrade\" | \"origin\" | \"origin-when-cross-origin\" | \"strict-origin\" | \"strict-origin-when-cross-origin\" | \"unsafe-url\" | undefined",
        "value": [
          {
            "value": "undefined"
          },
          {
            "value": "\"\""
          },
          {
            "value": "\"same-origin\""
          },
          {
            "value": "\"no-referrer\""
          },
          {
            "value": "\"no-referrer-when-downgrade\""
          },
          {
            "value": "\"origin\""
          },
          {
            "value": "\"origin-when-cross-origin\""
          },
          {
            "value": "\"strict-origin\""
          },
          {
            "value": "\"strict-origin-when-cross-origin\""
          },
          {
            "value": "\"unsafe-url\""
          }
        ]
      }
    }
  }
}
