{
  "props": {
    "children": {
      "defaultValue": null,
      "description": "Sets the content of the button.",
      "name": "children",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": true,
      "type": {
        "name": "ReactNode"
      }
    },
    "className": {
      "defaultValue": null,
      "description": "Adds custom classes to the element.",
      "name": "className",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "fluid": {
      "defaultValue": null,
      "description": "Makes the button scale to full width of its parent element.",
      "name": "fluid",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "intent": {
      "defaultValue": null,
      "description": "Changes the intent of the button. Mostly changes the color profile.",
      "name": "intent",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"primary\" | \"warning\" | \"danger\" | undefined",
        "value": [
          {
            "value": "undefined"
          },
          {
            "value": "\"primary\""
          },
          {
            "value": "\"warning\""
          },
          {
            "value": "\"danger\""
          }
        ]
      }
    },
    "inverted": {
      "defaultValue": null,
      "description": "Changes the color presentation for different backgrounds.",
      "name": "inverted",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "htmlMarkup": {
      "defaultValue": null,
      "description": "Changes the underlying element of the button.",
      "name": "htmlMarkup",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"button\" | \"a\" | undefined",
        "value": [
          {
            "value": "undefined"
          },
          {
            "value": "\"button\""
          },
          {
            "value": "\"a\""
          }
        ]
      }
    },
    "large": {
      "defaultValue": null,
      "description": "Changes the size of the button to large.",
      "name": "large",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "loading": {
      "defaultValue": null,
      "description": "Sets the button into a loading state displaying <Loader /> as content.",
      "name": "loading",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "onClick": {
      "defaultValue": null,
      "description": "",
      "name": "onClick",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "((e?: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined"
      }
    },
    "variant": {
      "defaultValue": null,
      "description": "Changes the visual representation of the button.",
      "name": "variant",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"fill\" | \"outline\" | \"borderless\" | undefined",
        "value": [
          {
            "value": "undefined"
          },
          {
            "value": "\"fill\""
          },
          {
            "value": "\"outline\""
          },
          {
            "value": "\"borderless\""
          }
        ]
      }
    },
    "ellipsis": {
      "defaultValue": null,
      "description": "Disables text wrapping and enables ellipsis.",
      "name": "ellipsis",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "testId": {
      "defaultValue": null,
      "description": "Sets the data-testid attribute.",
      "name": "testId",
      "parent": {
        "fileName": "src/components/Button/Button.tsx",
        "name": "ButtonProps"
      },
      "declarations": [
        {
          "fileName": "src/components/Button/Button.tsx",
          "name": "ButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "autoFocus": {
      "defaultValue": null,
      "description": "",
      "name": "autoFocus",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "disabled": {
      "defaultValue": null,
      "description": "",
      "name": "disabled",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "form": {
      "defaultValue": null,
      "description": "",
      "name": "form",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "formAction": {
      "defaultValue": null,
      "description": "",
      "name": "formAction",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "formEncType": {
      "defaultValue": null,
      "description": "",
      "name": "formEncType",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "formMethod": {
      "defaultValue": null,
      "description": "",
      "name": "formMethod",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "formNoValidate": {
      "defaultValue": null,
      "description": "",
      "name": "formNoValidate",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "boolean"
      }
    },
    "formTarget": {
      "defaultValue": null,
      "description": "",
      "name": "formTarget",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "name": {
      "defaultValue": null,
      "description": "",
      "name": "name",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "type": {
      "defaultValue": null,
      "description": "",
      "name": "type",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "value": {
      "defaultValue": null,
      "description": "",
      "name": "value",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLButtonProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLButtonProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string | number | string[]"
      }
    },
    "download": {
      "defaultValue": null,
      "description": "",
      "name": "download",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "href": {
      "defaultValue": null,
      "description": "",
      "name": "href",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "hrefLang": {
      "defaultValue": null,
      "description": "",
      "name": "hrefLang",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "media": {
      "defaultValue": null,
      "description": "",
      "name": "media",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "ping": {
      "defaultValue": null,
      "description": "",
      "name": "ping",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "rel": {
      "defaultValue": null,
      "description": "",
      "name": "rel",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "target": {
      "defaultValue": null,
      "description": "",
      "name": "target",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "string"
      }
    },
    "referrerPolicy": {
      "defaultValue": null,
      "description": "",
      "name": "referrerPolicy",
      "parent": {
        "fileName": "designsystem/src/constants.ts",
        "name": "HTMLAnchorProps"
      },
      "declarations": [
        {
          "fileName": "designsystem/src/constants.ts",
          "name": "HTMLAnchorProps"
        }
      ],
      "required": false,
      "type": {
        "name": "enum",
        "raw": "\"\" | \"same-origin\" | \"no-referrer\" | \"no-referrer-when-downgrade\" | \"origin\" | \"origin-when-cross-origin\" | \"strict-origin\" | \"strict-origin-when-cross-origin\" | \"unsafe-url\" | undefined",
        "value": [
          {
            "value": "undefined"
          },
          {
            "value": "\"\""
          },
          {
            "value": "\"same-origin\""
          },
          {
            "value": "\"no-referrer\""
          },
          {
            "value": "\"no-referrer-when-downgrade\""
          },
          {
            "value": "\"origin\""
          },
          {
            "value": "\"origin-when-cross-origin\""
          },
          {
            "value": "\"strict-origin\""
          },
          {
            "value": "\"strict-origin-when-cross-origin\""
          },
          {
            "value": "\"unsafe-url\""
          }
        ]
      }
    }
  }
}
